@page "/"
@rendermode InteractiveServer
@using CarApplication_Mudblazor.Models
@inject CarApplication_Mudblazor.Services.ICarService carService
@inject MudBlazor.ISnackbar snackBar

<MudCard Elevation="25">
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h6">Aggiungi una nuova Auto</MudText>
        </CardHeaderContent>
    </MudCardHeader>
    <MudCardContent>
        <MudTextField @bind-Value="car.Modello" Label="Modello" Variant="Variant.Text" Margin="Margin.Normal"></MudTextField>
        <MudTextField @bind-Value="car.Marca" Label="Marca" Variant="Variant.Text" Margin="Margin.Normal"></MudTextField>
        <MudTextField @bind-Value="car.Anno" Label="Anno" Variant="Variant.Text" Margin="Margin.Normal"></MudTextField>
        <br />
        <MudButton Variant="Variant.Filled" Color="Color.Success" OnClick="Save">Salva</MudButton>
    </MudCardContent>
</MudCard>
<br />
<MudTable Elevation="25" Items="cars" Filter="new Func<Car, bool>(Search)">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Cars</MudText>
        <MudSpacer />
        <MudTextField @bind-Value="searchString" Placeholder="Cerca auto..." Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Modello</MudTh>
        <MudTh>Marca</MudTh>
        <MudTh>Anno</MudTh>
        <MudTh>Actions</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Modello">@context.Modello</MudTd>
        <MudTd DataLabel="Marca">@context.Marca</MudTd>
        <MudTd DataLabel="Anno">@context.Anno</MudTd>
        <MudTd DataLabel="Actions">
            <MudFab @onclick="@(() => Edit(@context.Id))" Color="Color.Primary" Icon="@Icons.Material.Filled.Edit" Size="Size.Small" IconSize="Size.Small" />
            <MudFab @onclick="@(() => Delete(@context.Id))" Color="Color.Secondary" Icon="@Icons.Material.Filled.Delete" Size="Size.Small" IconSize="Size.Small" />
        </MudTd>
    </RowTemplate>
</MudTable>

@code {
    private string searchString = "";
    private Car car = new Car();
    private List<Car> cars = new List<Car>();

    protected override async Task OnInitializedAsync()
    {
        await GetCars();
    }

    private async Task GetCars()
    {
        cars = await carService.GetCars();
    }

    private bool Search(Car car)
    {
        if (string.IsNullOrWhiteSpace(searchString)) return true;
        if (car.Modello.Contains(searchString, StringComparison.OrdinalIgnoreCase)
            || car.Marca.Contains(searchString, StringComparison.OrdinalIgnoreCase)
            || car.Anno.ToString().Contains(searchString, StringComparison.OrdinalIgnoreCase))
        {
            return true;
        }
        return false;
    }

    public async Task Save()
    {
        await carService.SaveCar(car);
        car = new Car();
        snackBar.Add("Car Saved.", Severity.Success);
        await GetCars();
    }

    private void Edit(int id)
    {
        car = cars.FirstOrDefault(c => c.Id == id);
    }

    private async Task Delete(int id)
    {
       await carService.DeleteCar(id);
        snackBar.Add("Car Deleted.", Severity.Success);
        await GetCars();
    }
}
